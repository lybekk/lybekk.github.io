{"version":3,"sources":["webpack:///./src/components/styling/hoveringTag.module.css","webpack:///./src/pages/tags.tsx"],"names":["module","exports","TagsPage","data","group","allMdx","title","site","siteMetadata","className","icon","faHashtag","style","marginLeft","opacity","map","tag","i","tagStyle","to","kebabCase","fieldValue","key","display","fontSize","data-tag","totalCount","pageQuery"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,IAAM,mC,kCCDxB,gLAwFeC,UAnDE,SAAC,GAOQ,QANxBC,KACYC,EAKY,EALtBC,OAAUD,MAEQE,EAGI,EAJtBC,KACEC,aAAgBF,MAIpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQA,MAAOA,IACf,yBAAKG,UAAU,sBACb,6BACE,mCAEE,kBAAC,IAAD,CAAiBC,KAAMC,IAAWC,MAAO,CAAEC,WAAY,QAASC,QAAS,SAE1EV,EAAMW,KAAI,SAACC,EAAUC,GAAX,OACT,kBAAC,OAAD,CACER,UAAS,GAAKS,IAASF,IACvBG,GAAE,SAAWC,IAAUJ,EAAIK,YAAzB,IACFC,IAAKL,EACLL,MAAO,CAAEW,QAAS,QAASC,SAAU,UACrCC,WAAUT,EAAIK,YAEbL,EAAIK,WACL,0BAAMT,MAAO,CAAEC,WAAY,QAASC,QAAS,KAA7C,IAAsDE,EAAIU,WAA1D,aA0BP,IAAMC,EAAY","file":"component---src-pages-tags-tsx-6835a50792f9db55b280.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"hoveringTag-module--tag--1Rz_5\"};","import React, { ReactElement } from \"react\"\nimport PropTypes from \"prop-types\"\nimport kebabCase from \"lodash/kebabCase\"\nimport { Helmet } from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faHashtag } from \"@fortawesome/free-solid-svg-icons\"\nimport tagStyle from \"../components/styling/hoveringTag.module.css\"\n\ntype Tag = {\n  fieldValue: string\n  totalCount: number\n}\n\ntype Data = {\n  data: {\n    allMdx: {\n      group: [\n        {\n          fieldValue: string\n          totalCount: number\n        }\n      ]\n    }\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n  }\n}\n\n/**\n * Lists all tags, with count aggregates\n * @param param0 Graphql query\n */\nconst TagsPage = ({\n  data: {\n    allMdx: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}: Data): ReactElement => {\n  return (\n    <Layout>\n      <Helmet title={title} />\n      <div className=\"l-grid-center-list\">\n        <div /* Extra div for left text alignment */>\n          <h2>\n            Tags\n            <FontAwesomeIcon icon={faHashtag} style={{ marginLeft: `.4rem`, opacity: `.4` }} />\n          </h2>\n          {group.map((tag: Tag, i: number) => (\n            <Link\n              className={`${tagStyle.tag}`}\n              to={`/tags/${kebabCase(tag.fieldValue)}/`}\n              key={i}\n              style={{ display: `block`, fontSize: `larger` }}\n              data-tag={tag.fieldValue}\n            >\n              {tag.fieldValue}\n              <span style={{ marginLeft: `.4rem`, opacity: 0.4 }}>({tag.totalCount})</span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\nexport default TagsPage\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}